services:
  postgres:
    image: postgres:16-alpine
    container_name: cinetrack-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-cinetrack}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-cinetrack123}
      POSTGRES_DB: ${POSTGRES_DB:-cinetrack}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cinetrack-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cinetrack}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cinetrack-api
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-cinetrack}:${POSTGRES_PASSWORD:-cinetrack123}@postgres:5432/${POSTGRES_DB:-cinetrack}
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${API_PORT:-3000}
    ports:
      - "${API_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cinetrack-network
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma

volumes:
  postgres_data:
    driver: local

networks:
  cinetrack-network:
    driver: bridge
